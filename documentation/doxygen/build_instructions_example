# This file was automatically generated on Thu 20 Oct 2016 16:12:41 BST from
# source: /home/fwf58757/git/zebra2/pandabox/etc/makeIocs/example.xml
# 
# *** Please do not edit this file: edit the source file instead. ***
# 
/**
\page build_instructions_example Build Instructions for example
Build Instructions for example
<ol>
<li> Add the dependencies to configure/RELEASE.
\verbatim
ADBINARIES=/dls_sw/prod/R3.14.12.3/support/ADBinaries/2-2dls2
BUSY=/dls_sw/prod/R3.14.12.3/support/busy/1-6-1
FFMPEGSERVER=/dls_sw/prod/R3.14.12.3/support/ffmpegServer/3-0dls0-3
ADCORE=/dls_sw/prod/R3.14.12.3/support/ADCore/2-3dls3
ASYN=/dls_sw/prod/R3.14.12.3/support/asyn/4-26
PANDABOX=/home/fwf58757/git/zebra2/pandabox
ADUTIL=/dls_sw/prod/R3.14.12.3/support/adUtil/2-3
BLGUI=/dls_sw/prod/R3.14.12.3/support/BLGui/3-11
CALC=/dls_sw/prod/R3.14.12.3/support/calc/3-1
\endverbatim

<li> Add the DBD dependencies to src/Makefile
\verbatim
example_DBD += base.dbd
example_DBD += asyn.dbd
example_DBD += drvAsynIPPort.dbd
example_DBD += busySupport.dbd
example_DBD += ADSupport.dbd
example_DBD += NDPluginSupport.dbd
example_DBD += adUtilSupport.dbd
example_DBD += pandabox.dbd
example_DBD += calcSupport.dbd
example_DBD += ffmpegServer.dbd
\endverbatim

<li> Add the LIBS dependencies to src/Makefile
\verbatim
example_LIBS += ffmpegServer
example_LIBS += avdevice
example_LIBS += avformat
example_LIBS += avcodec
example_LIBS += avutil
example_LIBS += swscale
example_LIBS += calc
example_LIBS += pandabox
example_LIBS += adUtil
example_LIBS += NDPlugin
example_LIBS += ADBase
example_LIBS += netCDF
example_LIBS += NeXus
example_LIBS += busy
example_LIBS += asyn
example_SYS_LIBS += tiff
example_SYS_LIBS += jpeg
example_SYS_LIBS += z
example_SYS_LIBS += gomp
example_SYS_LIBS += X11
example_SYS_LIBS += xml2
example_SYS_LIBS += png12
example_SYS_LIBS += bz2
example_SYS_LIBS += Xext
example_SYS_LIBS += freetype
\endverbatim

<li> Use the template files to add records to the database.
\verbatim

# Macros:
#  PORT     Asyn Port name for pandabox coms
#  P        Device prefix
#  R        Device suffix
#  ADDR     address for areaDetector port
#  TIMEOUT  timeout for areaDetector
file $(PANDABOX)/db/pandabox.template
{
pattern { PORT, P, R, ADDR, TIMEOUT }
    { "pandabox", "PANDA:PANDABOX-01", ":CAM:", "0", "1000" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(ADCORE)/db/ADBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "PANDA:PANDABOX-01", ":CAM:", "pandabox", "1000", "0" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDROI.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":ROI:", "CAM.roi", "1", "0", "pandabox", "0", "1" }
    { "PANDA:PANDABOX-01", ":ROI1:", "CAM.roi.roi1", "1", "0", "pandabox", "0", "0" }
    { "PANDA:PANDABOX-01", ":ROI2:", "CAM.roi.roi2", "1", "0", "pandabox", "0", "0" }
    { "PANDA:PANDABOX-01", ":ROI3:", "CAM.roi.roi3", "1", "0", "pandabox", "0", "0" }
    { "PANDA:PANDABOX-01", ":ROI4:", "CAM.roi.roi4", "1", "0", "pandabox", "0", "0" }
    { "PANDA:PANDABOX-01", ":ROI5:", "CAM.roi.roi5", "1", "0", "pandabox", "0", "0" }
    { "PANDA:PANDABOX-01", ":ROI6:", "CAM.roi.roi6", "1", "0", "pandabox", "0", "0" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  XSIZE         Maximum size of X histograms (e.g. 1024)
#  YSIZE         Maximum size of Y histograms (e.g. 768)
#  HIST_SIZE     Maximum size of Pixel binning histogram (e.g. 256 for Int8)
#  NCHANS        Number of elements in the waveforms which accumulate past statistics
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDStats.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, XSIZE, YSIZE, HIST_SIZE, NCHANS, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":STAT:", "CAM.stat", "1", "0", "1024", "768", "256", "20000", "pandabox", "0", "1" }
    { "PANDA:PANDABOX-01", ":STAT1:", "CAM.stat.stat1", "1", "0", "1024", "768", "256", "20000", "CAM.roi.roi1", "0", "0" }
    { "PANDA:PANDABOX-01", ":STAT2:", "CAM.stat.stat2", "1", "0", "1024", "768", "256", "20000", "CAM.roi.roi1", "0", "0" }
    { "PANDA:PANDABOX-01", ":STAT3:", "CAM.stat.stat3", "1", "0", "1024", "768", "256", "20000", "CAM.roi.roi1", "0", "0" }
    { "PANDA:PANDABOX-01", ":STAT4:", "CAM.stat.stat4", "1", "0", "1024", "768", "256", "20000", "CAM.roi.roi1", "0", "0" }
    { "PANDA:PANDABOX-01", ":STAT5:", "CAM.stat.stat5", "1", "0", "1024", "768", "256", "20000", "CAM.roi.roi1", "0", "0" }
    { "PANDA:PANDABOX-01", ":STAT6:", "CAM.stat.stat6", "1", "0", "1024", "768", "256", "20000", "CAM.roi.roi1", "0", "0" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  TYPE          Asyn Type e.g. Int32
#  FTVL          Format, e.g. Int
#  NELEMENTS     Number of elements
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDStdArrays.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, TYPE, FTVL, NELEMENTS, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":ARR:", "CAM.arr", "1", "0", "Int8", "UCHAR", "786432", "CAM.roi", "0", "0" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDProcess.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":PROC:", "CAM.proc", "1", "0", "pandabox", "0", "1" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDOverlay.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":OVER:", "CAM.over", "1", "0", "CAM.proc", "0", "1" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  O        NDOverlay Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
#  NAME     Name for the overlay
#  SHAPE    Shape of the overlay
#  XPOS     Link for the XPos of the overlay
#  YPOS     Link for the YPos of the overlay
#  XSIZE    Link for the XSize of the overlay
#  YSIZE    Link for the YSize of the overlay
#  XWIDTH   Link for the XWidth of the overlay
#  YWIDTH   Link for the YWdith of the overlay
file $(ADCORE)/db/NDOverlayN.template
{
pattern { P, R, O, PORT, TIMEOUT, ADDR, NAME, SHAPE, XPOS, YPOS, XSIZE, YSIZE, XWIDTH, YWIDTH }
    { "PANDA:PANDABOX-01", ":OVER:1:", ":OVER:", "CAM.over", "1", "0", "Overlay 1", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:2:", ":OVER:", "CAM.over", "1", "1", "Overlay 2", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:3:", ":OVER:", "CAM.over", "1", "2", "Overlay 3", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:4:", ":OVER:", "CAM.over", "1", "3", "Overlay 4", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:5:", ":OVER:", "CAM.over", "1", "4", "Overlay 5", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:6:", ":OVER:", "CAM.over", "1", "5", "Overlay 6", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:7:", ":OVER:", "CAM.over", "1", "6", "Overlay 7", "1", "", "", "", "", "", "" }
    { "PANDA:PANDABOX-01", ":OVER:8:", ":OVER:", "CAM.over", "1", "7", "Overlay 8", "1", "", "", "", "", "", "" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(FFMPEGSERVER)/db/ffmpegFile.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":FIMG:", "CAM.fimg", "1", "0", "pandabox", "0", "1" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDFileTIFF.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":TIFF:", "CAM.tiff", "1", "0", "pandabox", "0", "1" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(ADCORE)/db/NDFileHDF5.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":HDF5:", "CAM.hdf", "1", "0", "pandabox", "0", "1" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  QUALITY       Jpeg Quality in percent
#  MAXW          Maximum Jpeg Width
#  MAXH          Maximum Jpeg Height
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(FFMPEGSERVER)/db/ffmpegStream.template
{
pattern { P, R, PORT, QUALITY, MAXW, MAXH, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "PANDA:PANDABOX-01", ":MJPG:", "CAM.mjpg", "100", "1600", "1200", "1", "0", "CAM.over", "0", "1" }
}

# Macros:
#  P            Template argument
#  NFLOW        Template argument
#  NTEMP        Template argument
#  MTYPE        Template argument
#  NCURR        Template argument
#  DESCRIPTION  Template argument
#  SHORTNAME    Template argument
#  GDA_NAME     Template argument
#  BL_SECTION   Template argument
#  BL_ORDER     Template argument
#  GDA_DESC     Template argument
file $(BLGUI)/db/BLGui-device.template
{
pattern { P, NFLOW, NTEMP, MTYPE, NCURR, DESCRIPTION, SHORTNAME, GDA_NAME, BL_SECTION, BL_ORDER, GDA_DESC }
    { "PANDA", "0", "0", "0", "0", "Pandabox", "PANDABOX", "", "", "", "" }
}
\endverbatim

<li> Add the startup commands to st.cmd
\verbatim

# Loading libraries
# -----------------

# Device initialisation
# ---------------------

cd "$(TOP)"

dbLoadDatabase "dbd/example.dbd"
example_registerRecordDeviceDriver(pdbbase)

drvAsynIPPortConfigure("pandabox_cmd", "172.23.252.201:8888", 100, 0, 0)

drvAsynIPPortConfigure("pandabox_data", "172.23.252.201:8889", 100, 0, 0)

asynSetTraceMask("pandabox_cmd", 0, 20)

asynSetTraceIOMask("pandabox_cmd",0,2)

asynSetTraceMask("pandabox_data", 0, 20)

asynSetTraceIOMask("pandabox_data",0,2)

# pandabox driver
# Create driver
pandaboxConfig("pandabox", "pandabox_cmd", "pandabox_data", "100000", "1000", "0", 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi", 1000, 0, "pandabox", 0, 0, 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi.roi1", 1000, 0, "pandabox", 0, 0, 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi.roi2", 1000, 0, "pandabox", 0, 0, 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi.roi3", 1000, 0, "pandabox", 0, 0, 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi.roi4", 1000, 0, "pandabox", 0, 0, 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi.roi5", 1000, 0, "pandabox", 0, 0, 0)

# NDROIConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDROIConfigure("CAM.roi.roi6", 1000, 0, "pandabox", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat", 1000, 0, "pandabox", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat.stat1", 1000, 0, "CAM.roi.roi1", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat.stat2", 1000, 0, "CAM.roi.roi1", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat.stat3", 1000, 0, "CAM.roi.roi1", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat.stat4", 1000, 0, "CAM.roi.roi1", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat.stat5", 1000, 0, "CAM.roi.roi1", 0, 0, 0)

# NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDStatsConfigure("CAM.stat.stat6", 1000, 0, "CAM.roi.roi1", 0, 0, 0)

# NDStdArraysConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
NDStdArraysConfigure("CAM.arr", 2, 0, "CAM.roi", 0, 0)

# NDProcessConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDProcessConfigure("CAM.proc", 1000, 0, "pandabox", 0, 0, 0)

# NDOverlayConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, NOverlays, maxBuffers, maxMemory)
NDOverlayConfigure("CAM.over", 1000, 0, "CAM.proc", 0, 8, 0, 0)

# ffmpegFileConfigure(portName,  queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
ffmpegFileConfigure  ("CAM.fimg", 1000, 0, "pandabox", 0, 50, 0)

# NDFileTIFFConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDFileTIFFConfigure("CAM.tiff", 1000, 0, "pandabox", 0, 50, 0)

# NDFileHDF5Configure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDFileHDF5Configure("CAM.hdf", 1000, 0, "pandabox", 0, 50, 0)

ffmpegServerConfigure(8080)
# ffmpegStreamConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
ffmpegStreamConfigure("CAM.mjpg", 2, 0, "CAM.over", "0", 0)

dbpf PANDA:PANDABOX-01:STAT:NDAttributesFile, exampleApp/data/CAM.stat.xml
dbpf PANDA:PANDABOX-01:STAT1:NDAttributesFile, exampleApp/data/CAM.stat.stat1.xml
dbpf PANDA:PANDABOX-01:STAT3:NDAttributesFile, exampleApp/data/CAM.stat.stat3.xml
dbpf PANDA:PANDABOX-01:STAT2:NDAttributesFile, exampleApp/data/CAM.stat.stat2.xml
dbpf PANDA:PANDABOX-01:STAT5:NDAttributesFile, exampleApp/data/CAM.stat.stat5.xml
dbpf PANDA:PANDABOX-01:STAT4:NDAttributesFile, exampleApp/data/CAM.stat.stat4.xml
dbpf PANDA:PANDABOX-01:STAT6:NDAttributesFile, exampleApp/data/CAM.stat.stat6.xml





































































































































dbpf "PANDA:PANDABOX-01:HDF5:FileWriteMode" "2"

dbpf "PANDA:PANDABOX-01:HDF5:LazyOpen" "1"

dbpf "PANDA:PANDABOX-01:HDF5:NumCapture" "10"

dbpf "PANDA:PANDABOX-01:HDF5:FileName" "test"

dbpf "PANDA:PANDABOX-01:HDF5:FilePath" "/tmp"

dbpf "PANDA:PANDABOX-01:HDF5:EnableCallbacks" "Enable"
\endverbatim
</ol>
**/
