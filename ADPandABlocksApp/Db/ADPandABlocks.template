# % macro, PORT, Asyn Port name for ADPandABlocks coms
# % macro, P, Device prefix
# % macro, R, Device suffix
# % macro, ADDR, address for areaDetector port
# % macro, TIMEOUT, timeout for areaDetector
# % gui, $(PORT), edmtab, ADPandABlocksDetector.edl, P=$(P), R=$(R), DEVICE=$(P)$(R)

include "ADBase.template"

record(bi, "$(P)$(R)CONNECTED") {
  field(DESC, "Is ADPandABlocks connected")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) ISCONNECTED")
  field(ZNAM, "Not Connected")
  field(ONAM, "Connected")
  field(ZSV, "INVALID")
  field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)HEADER") {
  field(DESC, "ADPandABlocks data header")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) HEADER")
  field(FTVL, "CHAR")
  field(NELM, "1024")
 # field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)DATAEND") {
  field(DESC, "Data end string")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) DATAEND")
  field(FTVL, "CHAR")
  field(NELM, "1024")
 # field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)NOMOTOR:SCALE") {
  field(VAL, "1")
}

record(calcout, "$(P)$(R)M1:ERES") {
  field(CALC, "(B=0?A:-A)*(C>0?C:1)*D")
  field(INPA, "$(M1=$(P)$(R)NOMOTOR).ERES CP")
  field(INPB, "$(M1=$(P)$(R)NOMOTOR).DIR CP")
  field(INPC, "$(M1=$(P)$(R)NOMOTOR):SCALE CP")
  field(INPD, "$(M1DIR=+)$(M1MULT=1)")
  field(PREC, "4")
}

record(ao, "$(P)$(R)M1:ERES:OUT") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M1_SCALE")
  field(DOL, "$(P)$(R)M1:ERES CP")
  field(OMSL, "closed_loop")
}

#test param for testing
record(longout, "$(P)$(R)TESTPARAM"){
	field(DESC, "$(PORT), $(ADDR), $(TIMEOUT)")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TESTPARAM")
    field(SCAN, "Passive")
} 

record(mbbo, "$(P)$(R)ColorMode") {
  field(DISA, "1")
}

record(ao, "$(P)$(R)Gain") {
  field(DISA, "1")
}

record(ai, "$(P)$(R)Gain_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)BinX") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)BinX_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)BinY") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)BinY_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)MinX") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)MinX_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)MinY") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)MinY_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)SizeX") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)SizeX_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)SizeY") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)SizeY_RBV") {
  field(DISA, "1")
}

record(bo, "$(P)$(R)ReverseX") {
  field(DISA, "1")
}

record(bi, "$(P)$(R)ReverseX_RBV") {
  field(DISA, "1")
}

record(bo, "$(P)$(R)ReverseY") {
  field(DISA, "1")
}

record(bi, "$(P)$(R)ReverseY_RBV") {
  field(DISA, "1")
}

record(ao, "$(P)$(R)AcquireTime") {
  field(DISA, "1")
}

record(ai, "$(P)$(R)AcquireTime_RBV") {
  field(DISA, "1")
}

record(ao, "$(P)$(R)AcquirePeriod") {
  field(DISA, "1")
}

record(ai, "$(P)$(R)AcquirePeriod_RBV") {
  field(DISA, "1")
}

record(longout, "$(P)$(R)NumExposures") {
  field(DISA, "1")
}

record(longin, "$(P)$(R)NumExposures_RBV") {
  field(DISA, "1")
}
