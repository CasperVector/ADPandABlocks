#====================================================================#
# Template file: ADPandABlocksEnc.template
# Macros:
# % macro, PORT, Asyn Port name for ADPandABlocks coms
# % macro, P, Device prefix
# % macro, R, Device suffix
# % macro, ENC_IND, index for scale param on posbus
#------

record(motor, "$(P)$(R)NOMOTOR") {
  field(DTYP, "Soft Channel")
  field(ERES, "1")
  field(OFF, "0")
  field(EGU, "")
}

record(ai, "$(P)$(R)NOMOTOR:SCALE") {
  field(VAL, "1")
}

record(ai, "$(P)$(R)NOMOTOR:OFF") {
  field(VAL, "0")
}

record(calcout, "$(P)$(R)M$(ENC_IND):SCALE") {
  field(CALC, "(B=0?A:-A)*(C>0?C:1)*D")
  field(INPA, "$(M$(ENC_IND)=$(P)$(R)NOMOTOR).ERES CP")
  field(INPB, "$(M$(ENC_IND)=$(P)$(R)NOMOTOR).DIR CP")
  field(INPC, "$(M$(ENC_IND)=$(P)$(R)NOMOTOR):SCALE CP")
  field(INPD, "$(M$(ENC_IND)DIR=+)$(M$(ENC_IND)MULT=1)")
  field(OUT,  "$(P)$(R)POSBUS$(ENC_IND):SCALE")
  field(PREC, "4")
}

record(calcout, "$(P)$(R)M$(ENC_IND):OFF") {
  field(CALC, "(B=0?A:-A)*(C>0?C:1)*D")
  field(INPA, "$(M$(ENC_IND)=$(P)$(R)NOMOTOR).OFF CP")
  field(INPB, "$(M$(ENC_IND)=$(P)$(R)NOMOTOR).DIR CP")
  field(INPC, "$(M$(ENC_IND)=$(P)$(R)NOMOTOR):SCALE CP")
  field(INPD, "$(M$(ENC_IND)DIR=+)$(M$(ENC_IND)MULT=1)")
  field(OUT,  "$(P)$(R)POSBUS$(ENC_IND):SCALE")
  field(PREC, "4")
}

record(stringout, "$(P)$(R)M$(ENC_IND):UNITS") {
  field(DESC, "INENC scale value")
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(OUT,  "$(P)$(R)POSBUS$(ENC_IND):UNITS")
  info(asyn:READBACK, "1")
}

#record(ao, "$(P)$(R)M1:ERES:OUT") {
#  field(DTYP, "asynFloat64")
#  field(OUT, "@asyn($(PORT),0) $(P)$(R)POSBUS$(ENC_IND):SCALE")
#  field(DOL, "$(P)$(R)M1:ERES CP")
#  field(OMSL, "closed_loop")
#}

##----

